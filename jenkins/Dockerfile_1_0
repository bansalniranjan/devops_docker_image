########## How To Use Docker Image ###############
##
##  Image Name: denny/jenkins:1.0
##  Git link: https://github.com/DennyZhang/devops_docker_image/blob/tag_v5/jenkins/Dockerfile_1_0
##  Docker hub link:
##  Build docker image: docker build --no-cache -f Dockerfile_1_0 -t denny/jenkins:1.0 --rm=true .
##  Description: Manage via Jenkins GUI
##################################################
# Base Docker image: https://hub.docker.com/_/jenkins/

FROM jenkins:2.46.2

LABEL maintainer "Denny<denny@dennyzhang.com>"

# Install thinbackup plugin
user root

# Install jenkins plugins
RUN /usr/local/bin/install-plugins.sh structs && \
    /usr/local/bin/install-plugins.sh credentials && \
    /usr/local/bin/install-plugins.sh plain-credentials && \
    /usr/local/bin/install-plugins.sh display-url-api && \
    /usr/local/bin/install-plugins.sh workflow-step-api && \
    /usr/local/bin/install-plugins.sh junit && \
    /usr/local/bin/install-plugins.sh thinBackup && \
    /usr/local/bin/install-plugins.sh slack && \
    /usr/local/bin/install-plugins.sh timestamper && \
    /usr/local/bin/install-plugins.sh git && \

# Install serverspec
    apt-get -y update && apt-get install -y --no-install-recommends ruby rake && \
    echo "gem: --no-rdoc --no-ri" >> /etc/gemrc && \
    gem install serverspec && \
    # TODO: avoid put jenkins scripts to /var/lib/devops
    mkdir -p /var/lib/devops/ && chmod 755 /var/lib/devops/ && \

# Verify docker image
    ruby --version | grep "2.1.5" && gem --version | grep "2.2.2" && \
    rake --version | grep "10.3.2" && gem list serverspec | grep "2.38.1"

WORKDIR /var/jenkins_home
user jenkins
RUN mkdir /var/jenkins_home/tmp/ /var/jenkins_home/scripts
# TODO: make sure the scripts are always up-to-date by using some package wrapper
ADD https://raw.githubusercontent.com/TOTVS/mdmpublic/tag_v5/jenkins_scripts/monitor/serverspec_check.sh \
     /var/jenkins_home/scripts/serverspec_check.sh 
